#pragma warning(disable : 4996)
#include <stdio.h>
#include <stdlib.h>
#define NUM 10000

int main() {
	
	//총 몇 명의 사람이 왔다갔는지 입력 받는다.
	int people;
	scanf("%d", &people);

	/*
	arrive[]는 뒤에 도착한 사람들이 몇 분 뒤에 도착했는지 저장하는 배열이고
	immigration[]은 도착한 사람들의 입국 심사가 걸린 시간을 저장하는 배열이다.
	*/
	int arrive[NUM];
	int immigration[NUM];
	int i;

	int arriveTime;
	int immigrationTime;

	for (i = 0; i < people; i++) 
	{
		scanf("%d %d", &arriveTime, &immigrationTime);
		arrive[i] = arriveTime;
		immigration[i] = immigrationTime;
	}
	
	/*
	timPass[]배열은 뒤에 온 사람이 입국 검사를 위해 걸린 시간을 저장하는 배열이다.
	*/
	int timePass[NUM];
	int waitTime;

	/*
	위에 설정한 immigrationTime에 immigration[0]값을 넣고
	arriveTime에  arrive[1]값을 넣는다. 처음으로 온 사람은 입국검사를 기다리지 않기 
	때문에 timePass[0]에는 0값을 넣어준다.
	*/
	immigrationTime = immigration[0];
	arriveTime = arrive[1];
	timePass[0] = 0;

	/*
	waitTime은 immigrationTime - arriveTime값이다. 다만 이는 waitTime이 0보다 클 때만
	적용되며 적용시에도 immigration[i + 1]과 arrive[i + 2]처럼 배열의 크기를 벗어나지 않게
	신경써준다. waitTime이 0보다 작을 경우 그 자리에는 0값이 들어가는데 전 사람의 입국 심사에서
	후에 도착한 값을 뺀 값이 0보다 크다면(immigration[i] - arrive[i + 1] > 0) 그 자리에는 
	immigration[i] - arrive[i + 1] > 0 값이 들어간다.
	*/
	for (i = 0; i < people; i++) {
		waitTime = immigrationTime - arriveTime;
	
		if (waitTime > 0){
			timePass[i + 1] = waitTime;
			immigrationTime += immigration[i + 1];
			if (i < people - 2) {
				arriveTime += arrive[i + 2];
			}
		}
		else{
			if (immigration[i] - arrive[i + 1] > 0) {
				timePass[i + 1] = immigration[i] - arrive[i + 1];
				immigrationTime = immigration[i+1];
				arriveTime = arrive[i+2];
			}
			else {
				timePass[i + 1] = 0;
				immigrationTime = immigration[i + 1];
				arriveTime = arrive[i + 2];
			}
		}
		

		
	}
	
	//sumTime변수에 모든 사람이 기다린 시간 값이 들어간다.
	float sumTime = 0;
	for (i = 0; i < people; i++) 
	{
		sumTime += timePass[i];
	}

	//sumTume을 사람 수만큼 나누어 소수점 두자리까지 출력한다.
	float avgTime = (sumTime / (float)people);
	printf("\n%.2f", avgTime);
	
	return 0;
}
